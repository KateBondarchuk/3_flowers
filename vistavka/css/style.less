/* шрифты должны подключаться в самом начале файла */

/* 
1) качаем нужные шрифты
2) с помощью https://transfonter.org/ конвертируем во все 5 форматов
3) качаем их, разархивируем и вставляем в папку fonts в проекте
4) задаем путь ../fonts/ всем шрифтам
5) отмечаем font-family для елементов */

/* по каждому наертанию шрифта вся процедура повторятется заново */

@font-face {
	font-family: 'Bebas';
	src: url('../fonts/BebasNeueRegular.eot');
	src: url('../fonts/BebasNeueRegular.eot?#iefix') format('embedded-opentype'),
		url('../fonts/BebasNeueRegular.woff2') format('woff2'),
		url('../fonts/BebasNeueRegular.woff') format('woff'),
		url('../fonts/BebasNeueRegular.ttf') format('truetype'),
		url('../fonts/BebasNeueRegular.svg#BebasNeueRegular') format('svg');
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: 'JOURNALISM';
	src: url('../fonts/JOURNALISM.eot');
	src: url('../fonts/JOURNALISM.eot?#iefix') format('embedded-opentype'),
		url('../fonts/JOURNALISM.woff2') format('woff2'),
		url('../fonts/JOURNALISM.woff') format('woff'),
		url('../fonts/JOURNALISM.ttf') format('truetype'),
		url('../fonts/JOURNALISM.svg#JOURNALISM') format('svg');
	font-weight: normal;
	font-style: normal;
}

/* можна поставить несколько курсоров сразу если нажимать их с зажатым ctrl  */


/* это переменные, пишутся через @, потом всюду вместо значения вставляем @bg и прога поймет что мы имеем ввиду #000 */
@h-text: #fff;
@bg: #000;
@main-text: #b7b6b6;
@header-bg: rgba(152, 151, 151, 0.24);
@purple: #8e1981;

/* это универсальный селектор, значит эти условия будут применятся ко всему на странице */
* {
margin: 0; 
padding: 0;
}

body {
	color: @main-text;
	background: @bg url('../img/bg.png') no-repeat 50% 45px; 
	// цвет фона, ссылка на картинку фона, чтоб не повторялась для заполнения фона, 
	// выравнивание по горизонтали 50% - значит по центру, по вертикали 45px - это отступ сверху.
}

.nav-wrap {
	background-color: @header-bg;
	height: 47px;
}

.container {
	max-width: 650px;
	display: block;
	margin: auto;
	padding: 0 10px;
}
/* margin:auto это автоматические отступы по краям, центрирует блок.
display: block это понимать класс как блочную структуру.
 */

 .logo {
 	width: 100px;
 	float: left;
 	margin-top: 10px;
 	a {
 		opacity: 0.7;
 		transition: 0.2s;
 		&:hover {
 		opacity: 1;
 	 }
 	}
 	

 	}
/* когда встраиваем елемент внутрь класса - точку перед ним уже не ставим!!! */
	/* opacity -прозрачность */
	/* a:hover - псевдоклас при наведении мышкой */


 	 /* float - выравнивание */
/* display: inline-block; это горизонтальный список аля меню */

nav {
	float: right;
	ul {
		display: block;

		li {
			display: inline-block;
			margin-top: 12px;

			a {
				text-decoration: none;
				color: @main-text; 
				text-transform: uppercase;
				font-size: 20px;
				font-family: 'Bebas', sans-serif;
				transition: all 0.2s;
				// transition - Устанавливает эффект перехода между двумя состояниями элемента
				// после : ставим что именно ему нужно отслеживать (color) в время (0.5s)
				// теперь при наведении на обьект цвет меняется плавно на протяжении полсекунды.
				margin-left: 30px;
				padding-bottom: 9px;

				// & обозначает родительский елемент, тоесть это то же самое, что сказать:
				// a:hover { Рабоает только в less.
				&:hover {
					border-bottom: 3px solid @h-text;
					color: @h-text;
				// если padding-bottom: 9px; перенести сюда, он будет появлятся возле текста, а отступ будет плавно віензжать при наведении.
				}
				
				&:active {
					border-bottom: 3px solid @purple;

				}
			}
				
				.m-active {
					border-bottom: 2px solid @purple;
				}
				
		}
	} 
}

/* a {
				text-decoration: none; убирает подчеркивание со ссылок */


h1 {
	font-size: 80px;
	text-align: center;
	line-height: 80px;
	/* line-height это междустрочное расст. */
	margin-top: 107px;
	color: @h-text;
	font-family: 'JOURNALISM', serif;
	font-weight: normal;
	// по умолчанию заголовок всегда жирный, чтоб перебить это значение, выставляем его вручную.
	
	// z-index: 500;
	// position: relative;
	// z-index работает ТОЛЬКО с елементами, которым назначено позиционирование 
	// absolute, fixed или relative. Поэтому нужно его указать чтобы елемент начал учавствовать в измениях глубины z-index.
}

.z-index-top {
	position: relative;
	z-index: 500;
	// всем елементам, которые должны быть наверну (контент) 
	// назначаем отдельный клас, где пишем позицию и индекс.
	// этот клас вписываем в html файле всем блокам с текстом, которые должны быть наверху.
}


.btn {
	display: block;
	text-align: center;
	margin-top: 48px;
	font-family: 'Bebas', sans-serif;
	/* название "Bebas" долнжо совпадать с тем, что указано вверху в подключении шрифта. */
}

.btn-info {
	display: inline-block;
	font-size: 26px;
	color: @main-text;
		text-decoration: none;
	text-transform: uppercase;
	border: 3px solid @main-text;
	padding: 6px 20px;
	transition: 0.3s;
	&:hover {
	color: @h-text;
	border-color: @h-text; 
	background-color: @purple;
	border-radius: 30px;
	padding: 6px 30px;
	}
}

.main {
	margin-top: 250px;
	margin-bottom: 110px;
	p {
		font-size: 18px;
		font-family: 'Open Sans', sans-serif;
		margin-bottom: 20px;
		color: @main-text;
	}
}

.flower1 {
	position: absolute;
	left: 0;
	top: 35px;
	// задаем елементу позиуию абсолют (значит по браузеру, независимо от контента)
	// и ставим отступы по краям - слева, вверху.
}

.flower2 {
	position: absolute;
	right: 0;
	top: 145px;
}

.copy {
	float: left;
	opacity: 0.7;
	p {
		font-family: 'Bebas', sans-serif;
		font-size: 12px;
		color: @main-text;
		span {
			display: block;
			font-size: 16px;
			font-family: 'Open Sans', sans-serif;
		}
	}
}

.social {
	float: right;
	a {
		opacity: 0.6;
	// это прозрачность
	&:hover {
		opacity: 1;
		// при наведении они будут ярче 
		}
	}
	
	a img {
		height: 30px;
		padding-left: 5px;
		}	
}

footer {
	padding-bottom: 30px;
	position: relative;
}

.flower3 {
	position: absolute;
	bottom: 0;
	left: 0;
}

.clear {
	display: block;
	clear: both;
}
// clear - Устанавливает, с какой стороны элемента запрещено его обтекание другими элементами.
// Отменяет обтекание элемента одновременно с правого и левого края.
// это нужнго для того, чтоб при уменьшении окна браузера оба блока не наезжали друг на друга, а переносились в новую строку.

@media (max-width: 650px) {
	// это правило @медиа для свойства "макс ширина 650пк"
	// будем регулировать поведение обьектов при сжатии страницы меньше чем на 650пк.
	nav ul li {
		margin-top: 14px;
		a {
			font-size: 16px;
			margin-left: 10px;
			padding-bottom: 10px;
			// делаем отступ между пунктами меню меньше
			// шрифт меню станет меньше при 650пк ширине екрана.
		}
	}

	.container {
		padding-right:25px;
		// отступ от правого края больше, чтоб лучше читалось
	}
	.social {
		float: none;
		margin-top: 10px;
		a {
			opacity: 1;
		}
	}

	.copy {
		float: none;

	}
}


@media (max-width: 550px) {
	nav ul li {
		a {
			font-size: 14px;
			margin-left: 5px;
			padding-bottom: 12px;
			}
		
	}
}






